(function() {var implementors = {};
implementors["openssl"] = ["impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/asn1/struct.Asn1GeneralizedTimeRef.html' title='openssl::asn1::Asn1GeneralizedTimeRef'>Asn1GeneralizedTimeRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/asn1/struct.Asn1TimeRef.html' title='openssl::asn1::Asn1TimeRef'>Asn1TimeRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/asn1/struct.Asn1StringRef.html' title='openssl::asn1::Asn1StringRef'>Asn1StringRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/asn1/struct.Asn1IntegerRef.html' title='openssl::asn1::Asn1IntegerRef'>Asn1IntegerRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/asn1/struct.Asn1BitStringRef.html' title='openssl::asn1::Asn1BitStringRef'>Asn1BitStringRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/asn1/struct.Asn1ObjectRef.html' title='openssl::asn1::Asn1ObjectRef'>Asn1ObjectRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/bn/struct.BigNumContextRef.html' title='openssl::bn::BigNumContextRef'>BigNumContextRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/bn/struct.BigNumRef.html' title='openssl::bn::BigNumRef'>BigNumRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/conf/struct.ConfRef.html' title='openssl::conf::ConfRef'>ConfRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/dh/struct.DhRef.html' title='openssl::dh::DhRef'>DhRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/dsa/struct.DsaRef.html' title='openssl::dsa::DsaRef'>DsaRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/ec/struct.EcGroupRef.html' title='openssl::ec::EcGroupRef'>EcGroupRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/ec/struct.EcPointRef.html' title='openssl::ec::EcPointRef'>EcPointRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/ec/struct.EcKeyRef.html' title='openssl::ec::EcKeyRef'>EcKeyRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/ec/struct.EcKeyBuilderRef.html' title='openssl::ec::EcKeyBuilderRef'>EcKeyBuilderRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/ocsp/struct.OcspBasicResponseRef.html' title='openssl::ocsp::OcspBasicResponseRef'>OcspBasicResponseRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/ocsp/struct.OcspCertIdRef.html' title='openssl::ocsp::OcspCertIdRef'>OcspCertIdRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/ocsp/struct.OcspResponseRef.html' title='openssl::ocsp::OcspResponseRef'>OcspResponseRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/ocsp/struct.OcspRequestRef.html' title='openssl::ocsp::OcspRequestRef'>OcspRequestRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/ocsp/struct.OcspOneReqRef.html' title='openssl::ocsp::OcspOneReqRef'>OcspOneReqRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/pkcs12/struct.Pkcs12Ref.html' title='openssl::pkcs12::Pkcs12Ref'>Pkcs12Ref</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/pkey/struct.PKeyRef.html' title='openssl::pkey::PKeyRef'>PKeyRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/pkey/struct.PKeyCtxRef.html' title='openssl::pkey::PKeyCtxRef'>PKeyCtxRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/rsa/struct.RsaRef.html' title='openssl::rsa::RsaRef'>RsaRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/ssl/struct.SslContextRef.html' title='openssl::ssl::SslContextRef'>SslContextRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/ssl/struct.SslCipherRef.html' title='openssl::ssl::SslCipherRef'>SslCipherRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/ssl/struct.SslSessionRef.html' title='openssl::ssl::SslSessionRef'>SslSessionRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/ssl/struct.SslRef.html' title='openssl::ssl::SslRef'>SslRef</a>","impl&lt;T:&nbsp;<a class='trait' href='openssl/stack/trait.Stackable.html' title='openssl::stack::Stackable'>Stackable</a>&gt; <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/stack/struct.StackRef.html' title='openssl::stack::StackRef'>StackRef</a>&lt;T&gt;","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/string/struct.OpensslStringRef.html' title='openssl::string::OpensslStringRef'>OpensslStringRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/x509/store/struct.X509StoreBuilderRef.html' title='openssl::x509::store::X509StoreBuilderRef'>X509StoreBuilderRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/x509/store/struct.X509StoreRef.html' title='openssl::x509::store::X509StoreRef'>X509StoreRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/x509/struct.X509StoreContextRef.html' title='openssl::x509::X509StoreContextRef'>X509StoreContextRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/x509/struct.X509Ref.html' title='openssl::x509::X509Ref'>X509Ref</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/x509/struct.X509ExtensionRef.html' title='openssl::x509::X509ExtensionRef'>X509ExtensionRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/x509/struct.X509NameRef.html' title='openssl::x509::X509NameRef'>X509NameRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/x509/struct.X509NameEntryRef.html' title='openssl::x509::X509NameEntryRef'>X509NameEntryRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/x509/struct.X509ReqRef.html' title='openssl::x509::X509ReqRef'>X509ReqRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/x509/struct.GeneralNameRef.html' title='openssl::x509::GeneralNameRef'>GeneralNameRef</a>","impl <a class='trait' href='openssl/types/trait.OpenSslTypeRef.html' title='openssl::types::OpenSslTypeRef'>ForeignTypeRef</a> for <a class='struct' href='openssl/x509/struct.X509AlgorithmRef.html' title='openssl::x509::X509AlgorithmRef'>X509AlgorithmRef</a>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
